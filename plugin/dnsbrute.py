#!/usr/bin/env python
#-*- coding: UTF-8 -*-

'''
Wiper, an assistant tool for web penetration test.
Copyright (c) 2014-2015 alpha1e0
See the file COPYING for copying detail
'''

import os
import socket
import re

from plugin.lib.dictparse import DictFileEnum
from plugin.lib.plugin import Plugin, PluginError
from plugin.lib.dnsresolve import DnsResolver
from model.model import Host
from config import RTD, CONF


class DnsBrute(Plugin):
	'''
	Use wordlist to bruteforce subdomain.
	'''
	def __init__(self, dictlist, log=True):
		super(DnsBrute, self).__init__(log=log)

		self.urlPattern = re.compile(r"^(?:http(?:s)?\://)?((?:[-0-9a-zA-Z_]+\.)+(?:[-0-9a-zA-Z_]+))")
		self.dictlist = [os.path.join("data","wordlist","dnsbrute",x) for x in dictlist]


	def checkDomain(self, domain, dnsresolver):
#		try:
#			ip = socket.gethostbyname(domain)
#		except:
#			return False
#		return ip
		ip = dnsresolver.domain2IP(domain)
		if ip:
			return ip


	def handle(self, data):
		if not isinstance(data, Host):
			self.put(data)
			return
		dns = DnsResolver()
		try:
			dataDomain = self.urlPattern.match(data.url).groups()[0].lower()
		except AttributeError:
			raise PluginError("dns brute plugin, domain format error")

		#partDoman示例：aaa.com partDomain为aaa，aaa.com.cn partDomain为aaa
		pos = dataDomain.rfind(".com.cn")
		if pos==-1: pos = dataDomain.rfind(".")
		partDomain = dataDomain if pos==-1 else dataDomain[0:pos]

		if dataDomain.startswith("www."):
			dataDomain = dataDomain[pos+4:]

		dlist = os.path.join("data","wordlist","toplevel.txt")
		for line in DictFileEnum(dlist):
			domain = partDomain + "." + line
			ip = self.checkDomain(domain, dns)
			if ip:
				self.put(Host(url=domain, ip=ip, description="Generated by dnsbrute plugin."))

		for dlist in self.dictlist:
			for line in DictFileEnum(dlist):
				domain = line + "." + dataDomain
				ip = self.checkDomain(domain, dns)
				if ip:
					self.put(Host(url=domain, ip=ip, description="Generated by dnsbrute plugin."))

